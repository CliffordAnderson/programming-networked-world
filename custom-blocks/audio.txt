Hello everyone, and welcome back to our series on programming for a network world.
Today we're going to talk about custom blocks. Have you ever looked through the palette in
NetsBlocks and said, hey, I wish there were a block for that, but it doesn't exist in the palette.
What can you do? Well, the good news is that if you can't find a block, then you can make your
own block. We're going to talk about how to make a custom block and why it's useful to hide the
complexity of your program. By encapsulating some of that complexity in a custom block,
you'll make your programs much more modular and easier to understand.
So, ready to start creating your own blocks? Let's get going.
Okay, today's project is going to be about the weather. What I'd like to do is combine two
network functions in NetsBlocks, two RPCs, one of which is going to tell us our geospatial location,
and the other is going to use that geospatial location to look up the weather and give us an
icon representing the current conditions. So, let's get started with just the basic pieces,
and then we'll talk about how to put them together in a custom block that takes the name of a city
and gives us a weather icon. Okay, so to begin, I'm going to go over here to network,
and I'm going to pull in two call blocks here. The first one I'm going to pull in,
I'm going to change to, let's see if I can find it,
let's call it science and then weather. Okay, and then if we drop it down here,
we'll see that we've got some options here. Let's go to icon, and you see that it requires a latitude
and longitude. Well, we can look that up in various ways, but the easiest way to do that is
just to use another RPC that gives us the latitude and longitude. So, in that case, I'm going to go to
geolocation here, and I'm going to drop this down, and I'm going to say geolocate, and this will take
an address and then return us our latitude and longitude. So, for example, if I put in just the
city of Nashville, Tennessee, and I click on this now, we'll see. Here we go. I get latitude and
longitude in a list of lists or table format. Okay, so if I want to pass this into the latitude
and longitude here, then I need to get that information out of this list of lists so that I
can pass latitude and longitude into the next block here. So, to do that, let's go ahead and create
some variables. We'll go over to variables here, and I'm going to grab some script variables,
and we're going to call one latitude
and the other longitude.
Okay, and now I can set these variables. Here's latitude, and let's set this one to longitude,
but I don't want to call the geolocation twice, so I should probably create another variable
called coordinates that will capture that information after I call it once.
So, I'm going to say coordinates, and now I'll set that coordinates here
to the result of this geolocation call, which is now hidden there. There we go. Let's make this a
little bit smaller so you can see it all. Okay, so I'm going to try now to call the geolocation for
Nashville, Tennessee, set it to coordinates, and then let's pull out the information from
that block. Now, remember, when we index into a list, we're going to want to index to the
particular row and then the item in that list. So, let's do that. We're going to go to
have to have two of these blocks, item 1 and item 2, and so the first one is going to be set to 2,
and then the second one to 1, and let's try that here, of coordinates, because we've already
captured coordinates, and then the same thing here. We'll duplicate that, except this will be
item 2. Now, just to test to see that we're getting the right information, let's just report
the information that we have so far. So, I'm going to go down and grab a report block. I can find it
here. Report, report, report, report. There it is, report, and I'm going to report. Let's just say I'm
going to report the latitude. Let's just make sure we're actually getting the information we want.
So, there's the latitude, and we can test the same thing with the longitude,
and voila. Easy to get those, you know, reversed, and then you'll end up somewhere
off the, you know, an ocean off of the coast of Africa somewhere. So, if that happens, you know
that you've got latitude and longitude reversed. Okay, so now let's drop in this report here,
and we're going to add latitude in the latitude slot, and longitude in the longitude slot,
and if, with any luck, we click on this, we should get an icon representing the current weather
conditions in Nashville, and there you go. It's partly cloudy. Okay, fantastic. So, we've got the
block working, but we don't want to necessarily ask our users to type into this particular slot
every time. It would be nice to have a function that is look up the weather and give us an icon
for a particular city without having to go through the steps of, you know, changing this here and kind
of figuring out what all these calls do. If we made a custom block, it would be very clear. Give the
name of a city, get an icon for the weather back. So, how do we do that? Well, there are two ways to
create a custom block in NetsBlocks. One is that you can click on custom here, and then in this
palette, you'll see make a block, and if you click on that, you get this option to make a block, but you
can also just right click here and click on make a block in the menu that pops up. So, let's go ahead
and click on make a block. Now, you get a lot of options here that you can use, and you can choose
whether it's going to be a command block, a reporter block, a predicate. In this case, we'll make it a
reporter, and we're going to associate it with the network palette, and that's because when you're
thinking about what this block does, you want to associate it with other types of blocks in terms
of its color that do similar things. And so, this is looking up something from the network. It's using
two RPCs, so it seems appropriate to put it under the network tab. So, I'll do that, and then we have
to give it a name. So, the name of this block will say weather icon for location, and then I can say,
is it for all sprites or for this sprite only? We'll just let it be for all sprites. Now, the thing is,
when I create this, you might say, okay, you've created this block. There's this
nice window here that you can use. We can take our script and just put it in here, and now we've got
a custom block that will accomplish the goal of looking up weather for a particular location,
except to say that there's no particular way. Let's see if I can just pull this down a little bit more.
There's no particular way to pass in information to this block. We don't have a slot yet for us to
enter the city. We just have weather icon for location, and if you look at what the block looks
like, which appears here in the palette now, it's just a solid reporter block with no place to enter
information. So, to remedy that, we're going to click on location, and you see that we get another pop-up
here, and it differentiates between title text, which is just that text that appears within the
block, and input name, and an input name provides a slot for you to use to pass information into that
custom block that can be used for computations that are contained within that block. So, if I
click over here, I can see, oh, I've got lots of different options to indicate what type of
information I'd like to come into this block. I can say it could be an object, or a list, or a number.
In this case, I want to use text. So, I'm going to say this block should have a location that's an input
that accepts text as its input, and I'll click that, and you see that it turns it
into what looks like a variable. So, that's going to be the parameter that people pass into this block
that is then used within the block to perform the calculation that the block is supposed to perform.
Okay, so I click on that, and now you see that I have a nice slot for the input, and so if I take
the input, and I say Nashville, will it work? Well, let's try it. There you go, but watch out,
it may not have worked for the reasons that you think. So, we still need here, we've got Nashville,
Tennessee kind of hardwired into our code, so it's always going to report for Nashville, Tennessee.
So, for example, if I looked up Los Angeles, California, it's going to tell me that it's also
partly cloudy there. What we need to do then is take this location block and drop it on top of
where Nashville, Tennessee had been. Now, whenever someone enters a new city, a city other than
Nashville, then the coordinates for that city will be looked up, and it will give the appropriate
weather conditions. So, now let's try it for Los Angeles, and dollars to donuts, Los Angeles is
going to be sunny. Oh, no, no, look at that, it's cloudy. It's cloudy in Los Angeles, but sunny in
Nashville. You never know about the weather. In any case, you can see now that you can use this
to look up weather in any part of the world that you'd like to look up. So, we could say like Berlin,
Germany, and there we go, cloudy and raining in Berlin. So, you've seen in this particular video
how to create a custom block. Custom blocks are wonderful ways to encapsulate information so that
you can use them in larger computations without getting lost in the details of what all the
particular blocks do. So, in this particular case, we composed two RPCs, one to find the
geolocation, the other to pass it to a weather service that provides us an icon that represents
that the weather in that location, and then we made a new block that just allows people to pass
in a city name and get back an icon. So, you can do this with almost anything that you want to do
in NetsBlocks when you want to simplify your computations and build larger programs. Typically,
you'll be doing that by making a lot of custom blocks and then composing those custom blocks
together to make units of computation. So, thanks very much for joining me in this video.
I look forward to seeing you in our next session. Bye-bye.
