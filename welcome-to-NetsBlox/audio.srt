1
00:00:00,000 --> 00:00:04,560
Hi everybody, my name is Cliff Anderson. I'm a librarian at Vanderbilt University

2
00:00:04,560 --> 00:00:08,160
and a member of Vanderbilt's Computational Thinking and Learning Initiative.

3
00:00:08,160 --> 00:00:12,480
This short video is a preface to my introduction to programming with Netsblocks.

4
00:00:12,480 --> 00:00:18,400
Netsblocks is a visual programming language that makes it easy and fun to learn to program,

5
00:00:18,400 --> 00:00:23,920
and Netsblocks allows you to do pretty advanced things like peer-to-peer networking and making

6
00:00:23,920 --> 00:00:29,040
remote procedure calls. This series will start with the basics of programming in Netsblocks

7
00:00:29,040 --> 00:00:35,040
and step-by-step, video-by-video, teach you what you need to write some really advanced code.

8
00:00:35,040 --> 00:00:40,160
Just like you see in the preface to a book, I'd like to start by giving credit to the people and

9
00:00:40,160 --> 00:00:45,200
organizations on whose work I'm building. To begin with, I'd like to thank the developers

10
00:00:45,200 --> 00:00:50,560
of the Snap programming language. Snap is a block-based programming language developed

11
00:00:50,560 --> 00:00:56,160
at the University of California, Berkeley that borrows from the visual vocabulary of Scratch

12
00:00:56,160 --> 00:01:02,400
but draws inspiration from the semantics of Scheme. The primary developers of Snap are Jens

13
00:01:02,400 --> 00:01:08,160
Munich and Brian Harvey. Netsblocks builds on Snap, extending its functionality. If you want

14
00:01:08,160 --> 00:01:14,000
to check out Snap for yourself, visit snap.berkeley.edu. A lot of what I teach in this course will

15
00:01:14,000 --> 00:01:18,800
work in Snap as well as in Netsblocks. If I'm doing something that only works in Netsblocks,

16
00:01:18,800 --> 00:01:23,360
I'll make sure to flag that for you. Second, I'd also like to thank the developers of the Beauty

17
00:01:23,360 --> 00:01:28,080
and Joy of Computing curriculum. The Beauty and Joy of Computing teaches the fundamentals of

18
00:01:28,080 --> 00:01:33,280
computer science at both the high school and college level with an emphasis, as the name

19
00:01:33,280 --> 00:01:38,880
suggests, on aesthetics and playfulness. I'd encourage you to check out the curriculum online

20
00:01:38,880 --> 00:01:46,080
at bjc.berkeley.edu and especially to watch Dan Garcia's TEDxBerkeley talk on the origins and

21
00:01:46,080 --> 00:01:51,680
principles of the BJC. I myself have taught the Beauty and Joy of Computing to undergraduates

22
00:01:51,680 --> 00:01:55,840
at the School of Engineering at Vanderbilt University. If you want, you can check out my

23
00:01:55,840 --> 00:02:03,600
curriculum online on github.com. What I teach during this video series is not a

24
00:02:03,600 --> 00:02:09,200
one-to-one port of that course, but it certainly draws inspiration both from the BJC and from my

25
00:02:09,200 --> 00:02:13,280
experience teaching undergraduates at Vanderbilt. Finally, I'd like to thank my colleagues at

26
00:02:13,280 --> 00:02:19,200
Vanderbilt who have developed Netsblocks, most particularly Akos Ledeshi, professor of computer

27
00:02:19,200 --> 00:02:24,800
engineering at Vanderbilt University and principal investigator of Netsblocks, as well as Brian Broll,

28
00:02:24,800 --> 00:02:30,640
research scientist at Vanderbilt and lead architect of the Netsblocks software. Last but not least,

29
00:02:30,640 --> 00:02:36,080
I'd like to credit the use of Alonzo, the friendly sprite modeled on Gobo from scratch.

30
00:02:36,080 --> 00:02:41,760
The difference is in the tail. Do you see how Alonzo has a forked tail? We'll get to why there

31
00:02:41,760 --> 00:02:46,720
is that difference later in this course. For now, let me thank the creators of Gobo and Alonzo for

32
00:02:46,720 --> 00:02:52,800
making this cute sprite to accompany us on our programming journey. Ready to learn how to program?

33
00:02:52,800 --> 00:03:05,280
Check out the next video in this series and let's get started together.

