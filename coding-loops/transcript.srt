1
00:00:00,000 --> 00:00:03,960
Hi, everyone. Welcome back to Programming for a Networked World.

2
00:00:03,960 --> 00:00:05,480
Today, we're going to be talking about

3
00:00:05,480 --> 00:00:08,520
a fundamental control structure called loops.

4
00:00:08,520 --> 00:00:12,640
Loops help you to automate repetitive tasks,

5
00:00:12,640 --> 00:00:14,360
so that you don't have to have blocks that

6
00:00:14,360 --> 00:00:16,680
just repeat themselves over and over again.

7
00:00:16,680 --> 00:00:20,680
You can put them inside a loop and have the loop do the work for you.

8
00:00:20,680 --> 00:00:23,360
But it's also important to know how to

9
00:00:23,360 --> 00:00:26,560
stop a loop when you want to move on to another task.

10
00:00:26,560 --> 00:00:30,840
So, ready to loop-de-loop the way through nets blocks?

11
00:00:30,840 --> 00:00:32,120
Let's get started.

12
00:00:32,120 --> 00:00:39,760
Okay. So today,

13
00:00:39,760 --> 00:00:42,200
we're going to be talking about four types of loops,

14
00:00:42,200 --> 00:00:44,240
and let's just find where the loops are.

15
00:00:44,240 --> 00:00:46,760
So if we go over here to control structures,

16
00:00:46,760 --> 00:00:49,760
you'll see, there we go, control structures.

17
00:00:49,760 --> 00:00:54,040
You'll see that we've got down here four types of loops,

18
00:00:54,040 --> 00:00:55,360
and we're going to spring them out.

19
00:00:55,360 --> 00:00:58,720
So forever, then there's the repeat,

20
00:00:58,720 --> 00:01:02,720
repeat until, and this last one,

21
00:01:02,720 --> 00:01:05,920
which has this strange looking variable in it.

22
00:01:05,920 --> 00:01:10,720
Okay. So let's just start at the top and see how a forever loop works.

23
00:01:10,720 --> 00:01:14,120
Now, a forever loop, as the name implies,

24
00:01:14,120 --> 00:01:15,640
just keeps going forever.

25
00:01:15,640 --> 00:01:19,960
So let's imagine that we wanted Ada to count up as high as she possibly could,

26
00:01:19,960 --> 00:01:23,240
just count until the end of the world, let's say.

27
00:01:23,240 --> 00:01:24,640
How would we do that?

28
00:01:24,920 --> 00:01:28,120
Well, we would start with a variable.

29
00:01:28,120 --> 00:01:30,040
So let's create a variable over here,

30
00:01:30,040 --> 00:01:33,160
and we're going to make this variable count.

31
00:01:33,160 --> 00:01:37,280
Okay. Then we'll set count at the beginning here,

32
00:01:37,280 --> 00:01:40,200
right like that, and we'll set count to one.

33
00:01:40,200 --> 00:01:44,560
I'm not going to have count up here on the stage because we'll have Ada actually say it.

34
00:01:44,560 --> 00:01:49,160
Now, we want to change the count by one as we go through the loop.

35
00:01:49,160 --> 00:01:54,320
There we go. We need to have Ada say the count.

36
00:01:54,320 --> 00:01:55,920
So that should actually be under looks.

37
00:01:55,920 --> 00:01:59,600
There we go. Let's say this here.

38
00:01:59,600 --> 00:02:03,080
To do that, I'm going to just make a little more space for myself.

39
00:02:03,080 --> 00:02:09,400
To do that, we need to bring that variable count here into the say block,

40
00:02:09,400 --> 00:02:12,440
and we're going to reduce the time so it's a little bit faster.

41
00:02:12,440 --> 00:02:16,480
We'll put a nice hat block on the top to start it all off.

42
00:02:16,480 --> 00:02:20,720
Okay. So this will just have Ada counting forever,

43
00:02:20,720 --> 00:02:22,520
at least until the end of the program.

44
00:02:22,720 --> 00:02:26,280
Ready? So there you go.

45
00:02:26,280 --> 00:02:31,280
Ada's counting, and you can see that it's still executing,

46
00:02:31,280 --> 00:02:35,560
and it'll just repeat what's inside of this forever block until we stop it.

47
00:02:35,560 --> 00:02:37,720
So I'm going to click on again to stop it.

48
00:02:37,720 --> 00:02:41,760
Okay. But sometimes you don't want to do something forever.

49
00:02:41,760 --> 00:02:44,640
You want to do something like a defined number of times.

50
00:02:44,640 --> 00:02:46,240
So here, for example,

51
00:02:46,240 --> 00:02:47,600
we have repeat 10,

52
00:02:47,600 --> 00:02:49,320
and this could be repeat any number of times,

53
00:02:49,320 --> 00:02:50,640
but we'll just stay with 10.

54
00:02:50,800 --> 00:02:54,120
We can actually just take most of what we've written over here and duplicate it.

55
00:02:54,120 --> 00:02:55,640
So I'm going to pull this part out.

56
00:02:55,640 --> 00:02:57,200
I'm going to click on it,

57
00:02:57,200 --> 00:02:59,360
and then I'm going to say duplicate,

58
00:02:59,360 --> 00:03:01,080
and drop that back in,

59
00:03:01,080 --> 00:03:02,880
and drop it over here,

60
00:03:02,880 --> 00:03:06,800
and let's do the same thing with this part right here.

61
00:03:06,800 --> 00:03:09,720
So I'm going to, there we go.

62
00:03:09,720 --> 00:03:14,440
Let's duplicate this and bring it over here,

63
00:03:14,440 --> 00:03:16,240
put it back together like that.

64
00:03:16,240 --> 00:03:19,480
Okay. Then we want a nice hat block here too.

65
00:03:19,480 --> 00:03:27,360
All right. So we want to set this count though to 0.

66
00:03:27,360 --> 00:03:29,600
This is actually supposed to be set to 0.

67
00:03:29,600 --> 00:03:31,320
So let's do that.

68
00:03:31,320 --> 00:03:34,760
Okay. Or 1, let's say.

69
00:03:35,640 --> 00:03:37,920
I've got to start it again.

70
00:03:37,920 --> 00:03:40,240
Okay. So now let's try this other one.

71
00:03:40,240 --> 00:03:44,120
Now, what you see here is that this will repeat 10 times.

72
00:03:44,120 --> 00:03:46,600
So it really doesn't matter what the count variable is.

73
00:03:46,600 --> 00:03:48,680
It will just repeat it 10 times.

74
00:03:48,720 --> 00:03:51,160
So for this one, in order to not confuse it with the other one,

75
00:03:51,160 --> 00:03:53,520
we won't have space for the hat block.

76
00:03:53,520 --> 00:03:56,240
Let's use just 1.

77
00:03:56,240 --> 00:03:59,640
Okay. So when I press 1 and I click on this,

78
00:03:59,640 --> 00:04:04,800
you see that it counts up to 10 and then it stops.

79
00:04:04,800 --> 00:04:07,720
Now, we could actually have a count from any number we wanted.

80
00:04:07,720 --> 00:04:09,840
It doesn't have to be 10. It could start counting from 20,

81
00:04:09,840 --> 00:04:12,760
for example, and the same block.

82
00:04:12,760 --> 00:04:15,560
Oops. Let's do that right there.

83
00:04:15,680 --> 00:04:19,040
The same block will count up just another 10 times.

84
00:04:19,040 --> 00:04:23,760
So the point is it will repeat itself 10 times and then stop.

85
00:04:23,760 --> 00:04:26,720
Now, there may be times when you want to stop the loop based

86
00:04:26,720 --> 00:04:29,960
on a particular condition that you encounter within the loop.

87
00:04:29,960 --> 00:04:32,360
It's a very common scenario, for example,

88
00:04:32,360 --> 00:04:35,640
to have a loop until you reach some kind of threshold.

89
00:04:35,640 --> 00:04:38,240
So for example, here,

90
00:04:38,240 --> 00:04:39,520
we might say let's count up,

91
00:04:39,520 --> 00:04:43,160
but when you get to 15, then stop.

92
00:04:43,160 --> 00:04:45,040
But it may not be 15 repetitions.

93
00:04:45,040 --> 00:04:46,960
It may just be until you reach 15.

94
00:04:46,960 --> 00:04:49,680
So let's set that up.

95
00:04:49,680 --> 00:04:50,760
So the way that we'll do that,

96
00:04:50,760 --> 00:04:57,800
we'll duplicate this part here like this and drop this back in.

97
00:04:57,920 --> 00:05:00,360
Now, we need to set that condition.

98
00:05:00,360 --> 00:05:03,600
So to do that, we're going to go over to our Boolean operators here.

99
00:05:03,600 --> 00:05:10,840
Let's just say if it's greater than or equal to,

100
00:05:10,840 --> 00:05:14,280
here we go, like this.

101
00:05:15,160 --> 00:05:17,760
Greater than 15 or equal to 15,

102
00:05:17,760 --> 00:05:22,840
then that will be what we use to decide when to stop this loop.

103
00:05:22,840 --> 00:05:25,320
So what we need here then is that variable again.

104
00:05:25,320 --> 00:05:27,760
We're going to throw a count in the front here,

105
00:05:27,760 --> 00:05:33,440
count here, and drop that into our Boolean condition.

106
00:05:33,440 --> 00:05:35,240
Let's put a hat block on this one,

107
00:05:35,240 --> 00:05:37,440
but just get this out of the way.

108
00:05:37,440 --> 00:05:40,200
We're going to have a different key to start this one.

109
00:05:40,200 --> 00:05:42,840
We'll say this one will be 2.

110
00:05:42,840 --> 00:05:44,920
So when I press 2,

111
00:05:44,920 --> 00:05:47,040
this is going to start counting.

112
00:05:47,040 --> 00:05:50,560
We should actually make sure that we reset count.

113
00:05:50,560 --> 00:05:55,000
So let's do that and let's set it to 1.

114
00:05:55,000 --> 00:05:57,240
Now, this will count up until 15.

115
00:05:57,240 --> 00:06:00,160
So we can just try that out.

116
00:06:00,160 --> 00:06:02,160
Let's see how it works.

117
00:06:04,360 --> 00:06:06,600
Oops, I had it set for 12.

118
00:06:06,600 --> 00:06:09,320
So you can see it reached actually 15 and stopped.

119
00:06:09,320 --> 00:06:11,400
So if we do it for 1 now,

120
00:06:11,400 --> 00:06:13,480
let's try that.

121
00:06:15,600 --> 00:06:20,120
There we go. 1, 2, 3, 4, 5, 6, 7,

122
00:06:20,120 --> 00:06:21,400
it counts pretty fast.

123
00:06:21,400 --> 00:06:25,720
But you can see that as we approach 15, it stopped.

124
00:06:25,720 --> 00:06:28,760
Now, the thing is it actually didn't say 15.

125
00:06:28,760 --> 00:06:31,920
Did you notice that? Let's just try this again at,

126
00:06:31,920 --> 00:06:37,280
let's say, 13, 13, 14, and then it stops.

127
00:06:37,280 --> 00:06:40,240
The reason is, it's checking that condition

128
00:06:40,240 --> 00:06:42,560
before it goes into the loop.

129
00:06:42,560 --> 00:06:46,480
So if you actually want it to reach 15 and then stop,

130
00:06:46,480 --> 00:06:49,800
you need to set this for 1 higher.

131
00:06:49,800 --> 00:06:55,480
So for example, if it's greater than 15 or equal to 16.

132
00:06:55,480 --> 00:06:57,920
So let's try that now.

133
00:06:59,800 --> 00:07:03,320
13, 14, 15, and then it stops.

134
00:07:03,320 --> 00:07:06,480
Okay. So you can see that this particular loop

135
00:07:06,480 --> 00:07:09,120
checks its condition before it enters the loop,

136
00:07:09,160 --> 00:07:10,480
and if the condition is met,

137
00:07:10,480 --> 00:07:12,560
then it moves on and skips the loop,

138
00:07:12,560 --> 00:07:15,400
goes to the next set of blocks that are below the loop.

139
00:07:15,400 --> 00:07:17,680
There are other control structures

140
00:07:17,680 --> 00:07:20,400
that check the condition at the end of the loop.

141
00:07:20,400 --> 00:07:22,120
So to get to those,

142
00:07:22,120 --> 00:07:23,520
you'd have to go over here,

143
00:07:23,520 --> 00:07:25,520
click on this white page,

144
00:07:25,520 --> 00:07:29,000
and then go to libraries and type in iteration,

145
00:07:29,000 --> 00:07:31,400
and you get iteration composition.

146
00:07:31,400 --> 00:07:33,600
You'll see that it brings up,

147
00:07:33,600 --> 00:07:36,280
if I can open this up a little bit more,

148
00:07:36,440 --> 00:07:41,680
several other types of iterators or loops,

149
00:07:41,680 --> 00:07:44,520
and you can see that one of them is

150
00:07:44,520 --> 00:07:47,320
going to be repeat until at the bottom.

151
00:07:47,320 --> 00:07:49,800
So this one will actually always execute

152
00:07:49,800 --> 00:07:52,440
and then check the condition at the bottom.

153
00:07:52,440 --> 00:07:55,440
So depending on what type of loop you're setting up,

154
00:07:55,440 --> 00:07:56,560
that is an option.

155
00:07:56,560 --> 00:07:58,600
If you do want to use this option,

156
00:07:58,600 --> 00:08:01,240
then you need to open this library,

157
00:08:01,240 --> 00:08:03,480
and you can import it here,

158
00:08:03,520 --> 00:08:06,960
and you'll see those blocks now under the custom tab.

159
00:08:06,960 --> 00:08:11,400
So we could pull in this repeat until right here,

160
00:08:11,400 --> 00:08:13,040
and we can set up that loop,

161
00:08:13,040 --> 00:08:17,560
but now check the condition at the exit of the loop.

162
00:08:17,560 --> 00:08:19,400
All right, the last loop that I want to talk

163
00:08:19,400 --> 00:08:21,720
about is this for loop here.

164
00:08:21,720 --> 00:08:23,120
This is a bit of a different loop,

165
00:08:23,120 --> 00:08:25,520
and it really just incorporates a shortcut.

166
00:08:25,520 --> 00:08:26,560
You know we've been creating

167
00:08:26,560 --> 00:08:28,800
this count variable for each one of these loops,

168
00:08:28,800 --> 00:08:31,520
but the for loop allows you to create a loop without

169
00:08:31,560 --> 00:08:34,080
making a specific variable in advance.

170
00:08:34,080 --> 00:08:36,600
It actually just has a variable built in.

171
00:08:36,600 --> 00:08:38,720
Typically that variable is called I,

172
00:08:38,720 --> 00:08:40,520
but if you wanted to, you could change it to count

173
00:08:40,520 --> 00:08:42,440
just by clicking on it and renaming it.

174
00:08:42,440 --> 00:08:44,680
It doesn't have any special meaning.

175
00:08:44,680 --> 00:08:47,400
And here you can see count from one to 10,

176
00:08:47,400 --> 00:08:48,560
and it's going to loop,

177
00:08:48,560 --> 00:08:50,600
and it's going to count each time it goes through.

178
00:08:50,600 --> 00:08:54,000
So what that allows you to do is to save this extra step

179
00:08:54,000 --> 00:08:58,160
of setting the counter and then incrementing the counter

180
00:08:58,160 --> 00:08:59,480
as you go through the loop.

181
00:08:59,480 --> 00:09:01,280
So all we need to do to use this block

182
00:09:02,040 --> 00:09:02,880
is to copy this piece here.

183
00:09:02,880 --> 00:09:03,720
Let me do that.

184
00:09:03,720 --> 00:09:06,280
I'm going to duplicate this, bring it down here.

185
00:09:06,280 --> 00:09:09,640
Let's put this one back together where it should be.

186
00:09:09,640 --> 00:09:12,080
Okay, and let's put a hat block on this one too,

187
00:09:12,080 --> 00:09:15,440
if I can get enough space here in the scripting area.

188
00:09:15,440 --> 00:09:17,320
All right, and I'm going to put a hat block

189
00:09:17,320 --> 00:09:22,320
on this for loop, and let's call this one three.

190
00:09:23,000 --> 00:09:26,800
So when I press three, then I'll go through that loop,

191
00:09:26,800 --> 00:09:29,240
and you can see that this counter will automatically

192
00:09:29,240 --> 00:09:31,280
take care of where it is in the loop.

193
00:09:31,280 --> 00:09:32,640
And let's just see how that works.

194
00:09:32,640 --> 00:09:37,120
One, two, three, four, five, six, seven, eight, nine,

195
00:09:37,120 --> 00:09:39,240
and it goes to 10, and then it stops.

196
00:09:40,440 --> 00:09:43,240
So all these loops are available to you,

197
00:09:43,240 --> 00:09:45,240
and as you saw, there are even more loops

198
00:09:45,240 --> 00:09:47,520
behind the scenes in libraries and nets blocks

199
00:09:47,520 --> 00:09:49,000
that you can use.

200
00:09:49,000 --> 00:09:51,360
And the purpose of all of the loops

201
00:09:51,360 --> 00:09:53,760
is to make your programs more efficient.

202
00:09:53,760 --> 00:09:56,160
Whether you're going to be counting up to a certain number

203
00:09:56,160 --> 00:09:59,040
or performing an operation a certain number of times,

204
00:09:59,720 --> 00:10:02,720
the loops help you to set conditions about when to stop,

205
00:10:02,720 --> 00:10:04,800
when to move on to something else.

206
00:10:04,800 --> 00:10:06,560
It could just be a certain number of repetitions.

207
00:10:06,560 --> 00:10:09,640
It could be when you meet a particular threshold,

208
00:10:09,640 --> 00:10:12,300
and it helps to organize your program

209
00:10:12,300 --> 00:10:14,480
and stop you from having to repeat blocks

210
00:10:14,480 --> 00:10:16,880
over and over again in series.

211
00:10:16,880 --> 00:10:19,040
All right, so that's everything we had to say today

212
00:10:19,040 --> 00:10:21,760
about looping, and I look forward to seeing you

213
00:10:21,760 --> 00:10:23,200
in my next video.

